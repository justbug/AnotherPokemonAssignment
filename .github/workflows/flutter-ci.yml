name: Flutter CI

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run tests on'
        required: false
        default: 'main'
        type: string

concurrency:
  group: ${{ github.workflow }}-pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  gate:
    name: Gate
    runs-on: ubuntu-latest
    outputs:
      touched: ${{ steps.filter.outputs.app }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            app:
              - 'flutter_another_pokemon_assignment/**'
      - name: Summarize
        run: echo "changed=${{ steps.filter.outputs.app }}"

  analyze:
    name: Analyze
    needs: gate
    if: needs.gate.outputs.touched == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch || github.ref }}
      
    - name: Setup Flutter Environment
      uses: ./.github/actions/setup-flutter
      
    - name: Analyze code
      working-directory: ./flutter_another_pokemon_assignment
      run: flutter analyze

  test:
    name: Test
    needs: gate
    if: needs.gate.outputs.touched == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch || github.ref }}
      
    - name: Setup Flutter Environment
      uses: ./.github/actions/setup-flutter
    
    - name: Create test results directory
      working-directory: ./flutter_another_pokemon_assignment
      run: mkdir -p test_results
    
    - name: Run Flutter tests with JSON reporter
      id: test-run
      working-directory: ./flutter_another_pokemon_assignment
      run: |
        # 執行測試並產生 JSON 格式的測試結果
        set +e  # 暫時不讓腳本在錯誤時退出
        flutter test --machine > test_results/test-results.json 2>&1
        test_exit_code=$?
        set -e  # 重新啟用錯誤時退出
        
        # 將退出代碼保存到環境變量
        echo "test_exit_code=$test_exit_code" >> $GITHUB_OUTPUT
        
        # 顯示測試結果摘要
        echo "📈 測試結果摘要："
        if [ "$test_exit_code" -eq 0 ]; then
          echo "✅ 所有測試通過！"
        else
          echo "❌ 測試失敗！"
        fi

    - name: Test Report
      uses: dorny/test-reporter@v2
      if: ${{ !cancelled() }}
      with:
        name: Flutter Tests
        path: flutter_another_pokemon_assignment/test_results/test-results.json
        reporter: flutter-json
        fail-on-error: true
        fail-on-empty: true
        max-annotations: 10
        list-suites: all
        list-tests: failed

  build-android:
    name: Build Android
    needs: gate
    if: needs.gate.outputs.touched == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch || github.ref }}
      
    - name: Setup Flutter Environment
      uses: ./.github/actions/setup-flutter
      
    - name: Build Android APK
      working-directory: ./flutter_another_pokemon_assignment
      run: flutter build apk --debug
    