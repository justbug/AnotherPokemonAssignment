name: Flutter CI

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run tests on'
        required: false
        default: 'main'
        type: string

concurrency:
  group: ${{ github.workflow }}-pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  gate:
    name: Gate
    runs-on: ubuntu-latest
    outputs:
      touched: ${{ steps.filter.outputs.app }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            app:
              - 'flutter_another_pokemon_assignment/**'
      - name: Summarize
        run: echo "changed=${{ steps.filter.outputs.app }}"

  analyze:
    name: Analyze
    needs: gate
    if: needs.gate.outputs.touched == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch || github.ref }}
      
    - name: Setup Flutter Environment
      uses: ./.github/actions/setup-flutter
      
    - name: Analyze code
      working-directory: ./flutter_another_pokemon_assignment
      run: flutter analyze

  test:
    name: Test
    needs: gate
    if: needs.gate.outputs.touched == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch || github.ref }}
      
    - name: Setup Flutter Environment
      uses: ./.github/actions/setup-flutter
    
    - name: Run Flutter tests
      id: test-run
      working-directory: ./flutter_another_pokemon_assignment
      run: |
        # 執行測試並捕獲輸出
        set +e  # 暫時不讓腳本在錯誤時退出
        flutter test --reporter=expanded --coverage 2>&1 | tee test_output.log
        test_exit_code=$?
        set -e  # 重新啟用錯誤時退出
        
        # 將退出代碼保存到環境變量
        echo "test_exit_code=$test_exit_code" >> $GITHUB_OUTPUT

    - name: Analyze test results
      working-directory: ./flutter_another_pokemon_assignment
      run: |
        echo "📈 測試結果摘要："
        
        # 分析測試結果
        if [ "${{ steps.test-run.outputs.test_exit_code }}" -eq 0 ]; then
          echo "✅ 所有測試通過！"
          echo "📊 測試統計："
          grep -E "(All tests passed!|test.*passed)" test_output.log || echo "  - 測試執行完成"
        else
          echo "❌ 測試失敗！"
          echo ""
          echo "📋 測試失敗詳情："
          echo "----------------------------------------"
          
          # 顯示失敗的測試
          if grep -q "FAILED" test_output.log; then
            echo "🔍 失敗的測試："
            grep -A 5 -B 2 "FAILED" test_output.log
          fi
          
          # 顯示錯誤信息
          if grep -q "ERROR" test_output.log; then
            echo ""
            echo "🚨 錯誤信息："
            grep -A 10 -B 2 "ERROR" test_output.log
          fi
          
          # 顯示異常信息
          if grep -q "Excepcted" test_output.log; then
            echo ""
            echo "💥 異常信息："
            grep -A 15 -B 5 "Expected" test_output.log
          fi
          
          echo "----------------------------------------"
          echo "📄 完整測試輸出已保存到 test_output.log"
        fi

    - name: Fail on test failure
      working-directory: ./flutter_another_pokemon_assignment
      if: steps.test-run.outputs.test_exit_code != 0
      run: |
        echo "🚨 測試失敗，CI 將標記為失敗狀態"
        exit 1

  build-android:
    name: Build Android
    needs: gate
    if: needs.gate.outputs.touched == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch || github.ref }}
      
    - name: Setup Flutter Environment
      uses: ./.github/actions/setup-flutter
      
    - name: Build Android APK
      working-directory: ./flutter_another_pokemon_assignment
      run: flutter build apk --debug
    