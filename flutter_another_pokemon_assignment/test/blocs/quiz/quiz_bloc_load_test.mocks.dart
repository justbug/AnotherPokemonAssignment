// Mocks generated by Mockito 5.4.6 from annotations
// in flutter_another_pokemon_assignment/test/blocs/quiz/quiz_bloc_load_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_another_pokemon_assignment/models/quiz/quiz_models.dart'
    as _i2;
import 'package:flutter_another_pokemon_assignment/repository/quiz_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePokemonQuizDetail_0 extends _i1.SmartFake
    implements _i2.PokemonQuizDetail {
  _FakePokemonQuizDetail_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeQuizRound_1 extends _i1.SmartFake implements _i2.QuizRound {
  _FakeQuizRound_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [QuizRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuizRepository extends _i1.Mock implements _i3.QuizRepository {
  MockQuizRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.PokemonQuizEntry>> loadPokemonList() =>
      (super.noSuchMethod(
            Invocation.method(#loadPokemonList, []),
            returnValue: _i4.Future<List<_i2.PokemonQuizEntry>>.value(
              <_i2.PokemonQuizEntry>[],
            ),
          )
          as _i4.Future<List<_i2.PokemonQuizEntry>>);

  @override
  _i4.Future<_i2.PokemonQuizDetail> loadPokemonDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#loadPokemonDetail, [id]),
            returnValue: _i4.Future<_i2.PokemonQuizDetail>.value(
              _FakePokemonQuizDetail_0(
                this,
                Invocation.method(#loadPokemonDetail, [id]),
              ),
            ),
          )
          as _i4.Future<_i2.PokemonQuizDetail>);

  @override
  void clearCache() => super.noSuchMethod(
    Invocation.method(#clearCache, []),
    returnValueForMissingStub: null,
  );

  @override
  _i4.Future<_i2.QuizRound> createRound() =>
      (super.noSuchMethod(
            Invocation.method(#createRound, []),
            returnValue: _i4.Future<_i2.QuizRound>.value(
              _FakeQuizRound_1(this, Invocation.method(#createRound, [])),
            ),
          )
          as _i4.Future<_i2.QuizRound>);
}
