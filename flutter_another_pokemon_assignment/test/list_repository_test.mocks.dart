// Mocks generated by Mockito 5.4.6 from annotations
// in flutter_another_pokemon_assignment/test/list_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_another_pokemon_assignment/services/core/pokemon_service.dart'
    as _i3;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [PokemonService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonService extends _i1.Mock implements _i3.PokemonService {
  MockPokemonService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Response> fetch(String? path, {Map<String, String?>? query}) =>
      (super.noSuchMethod(
            Invocation.method(#fetch, [path], {#query: query}),
            returnValue: _i4.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(#fetch, [path], {#query: query}),
              ),
            ),
          )
          as _i4.Future<_i2.Response>);
}
